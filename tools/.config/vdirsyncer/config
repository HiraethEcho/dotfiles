# An example configuration for vdirsyncer.
#
# Move it to ~/.vdirsyncer/config or ~/.config/vdirsyncer/config and edit it.
# Run `vdirsyncer --help` for CLI usage.
#
# Optional parameters are commented out.
# This file doesn't document all available parameters, see
# http://vdirsyncer.pimutils.org/ for the rest of them.

[general]
# A folder where vdirsyncer can store some metadata about each pair.
status_path = "~/.local/state/vdirsyncer/status/"

# CARDDAV
# [pair bob_contacts]
# A `[pair <name>]` block defines two storages `a` and `b` that should be
# synchronized. The definition of these storages follows in `[storage <name>]`
# blocks. This is similar to accounts in OfflineIMAP.
# a = "bob_contacts_local"
# b = "bob_contacts_remote"

# Synchronize all collections that can be found.
# You need to run `vdirsyncer discover` if new calendars/addressbooks are added
# on the server.

# collections = ["from a", "from b"]

# Synchronize the "display name" property into a local file (~/.contacts/displayname).
# metadata = ["displayname"]

# To resolve a conflict the following values are possible:
#   `null` - abort when collisions occur (default)
#   `"a wins"` - assume a's items to be more up-to-date
#   `"b wins"` - assume b's items to be more up-to-date
#conflict_resolution = null

# [storage bob_contacts_local]
# A storage references actual data on a remote server or on the local disk.
# Similar to repositories in OfflineIMAP.
# type = "filesystem"
# path = "~/.contacts/"
# fileext = ".vcf"

# [storage bob_contacts_remote]
# type = "carddav"
# url = "https://owncloud.example.com/remote.php/carddav/"
#username =
# The password can also be fetched from the system password storage, netrc or a
# custom command. See http://vdirsyncer.pimutils.org/en/stable/keyring.html
#password =

# CALDAV
# [pair bob_calendar]
# a = "bob_calendar_local"
# b = "bob_calendar_remote"
# collections = ["from a", "from b"]

# Calendars also have a color property
# metadata = ["displayname", "color"]

# [storage bob_calendar_local]
# type = "filesystem"
# path = "~/.calendars/"
# fileext = ".ics"

# [storage bob_calendar_remote]
# type = "caldav"
# url = "https://owncloud.example.com/remote.php/caldav/"
#username =
#password =
#
#
# https://p235-caldav.icloud.com.cn/17351757553/calendars/87BBBA05-934B-4D5A-BB27-771A9CD413A2/

[storage ical]
type = "caldav"
url = "https://caldav.icloud.com.cn/"
username = "wyz2016zxc@icloud.com"
password = "itcc-siyq-rjty-cjyd"

[storage local_ical]
type = "filesystem"
path = "~/.local/share/calendars/"
fileext = ".ics"

[pair icloud_sync]
a = "ical"
b = "local_ical"
collections = ["from a", "from b"]
# metadata = ["displayname", "color"]
# conflict_resolution = "a wins"  # 冲突时 iCloud 优先

[pair test]
a = "test_local"
b = "test_remote"
collections = ["from a", "from b"]
metadata = ["color", "displayname", "description", "order"]

[storage test_local]
type = "filesystem"
path = "~/.local/share/calendarstest"
fileext = ".ics"

[storage test_remote]
type = "caldav"
url = "https://p235-caldav.icloud.com.cn/17351757553/calendars/87BBBA05-934B-4D5A-BB27-771A9CD413A2/"
username = "wyz2016zxc@icloud.com"
password = "itcc-siyq-rjty-cjyd"
